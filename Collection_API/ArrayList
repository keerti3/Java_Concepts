Collections Framework was introduced to enhance array operations and provide a set of standard interfaces and classes for handling data
To use the Collections Framework, you need to import the java.util package, which contains these interfaces and classes.

Collection interface:

List Interface: Implemented by classes such as ArrayList, LinkedList, and Vector.
• Queue Interface: Implemented by classes such as PriorityQueue. The Deque interface, which extends Queue, is implemented by classes like ArrayDeque.
• Set Interface: Commonly used in more advanced topics. It is implemented by classes such as HashSet and LinkedHashSet.
• Map Interface: Although not directly under the Collection hierarchy, the Map interface is part of the Java Collections Framework. It stores data in key-value pairs and is implemented by classes like HashMap and LinkedHashMap

Example:

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

public class Demo {
    public static void main(String[] args){   
    	
//    	Collection<Integer> nums= new ArrayList<Integer>();
//  	Collection nums=new ArrayList();
    	List<Integer> nums=new ArrayList<Integer>();
    	nums.add(6);
    	nums.add(5);
    	nums.add(8);
    	nums.add(2);
    	//nums.add("5");
    	
    	System.out.println(nums.get(2));
    	
    	System.out.println(nums.indexOf(2));
    	
//    	for(int n:nums)
//    	{
//    		System.out.println(nums);	
//    	}
    	for(Object n:nums)
    	{
    		int num=(Integer)n;
    		System.out.println(nums);	
    	}
    }
}
Hierarchy: refer diagram from notes
